// by color
$lightBlue: #8DA6CF;
$lightTurq: #3090AA;
// by function
$bgColor: white;
$c_outline:   $lightBlue;
$c_attribute: $lightTurq;
$font: 'Inconsolata';

body {
  /*background-color: #CECCD2;*/
  /*background-color: #0a001f;*/
  background-color: $bgColor;
  /*color: #f8f8f8;*/
  color: black;
  font-family: $font, monospace;
  font-size: 16px;
}

a { // why did this get overridden?
  text-decoration: underline;
  cursor: pointer;
  color: #551A8B;
}

#header {
  background-color: white;
  margin-bottom: 5px;
  padding: 5px;
  text-align: right;
}

#main {
  overflow-y: auto;
  #screen {
    margin-left: 1em;
  }
}

#input_editor {
  margin-bottom: 1em;
}

/* these are in static/codemirror.css
.CodeMirror-scroll {
  overflow-x: auto;
  overflow-y: visible;
  height: auto;
  position: relative;
  outline: none;
}
.CodeMirror-scrollbar {
  float: right;
  overflow-x: hidden;
  overflow-y: scroll;
  margin-left: -1px;
}
*/

#footer {
}

#log {
  background-color: #0a001f !important; /* hack around UILayout defaults */
  color: white;
  padding: 1em;
}

/* formatting */
.highlight {
  background-color: #FEF6BF !important;
}
.debug {
  /* display: none; /* debug */
  opacity: 0.4;
  margin: 0 1em;
}
.right {
  float: right;
}
.clear {
  clear: both;
}
input[type=text]{
  background: transparent;
  font-family: $font, monospace;
  font-size: inherit;
  border-radius: .3em;
  border: 1px solid $c_outline;
  padding: .3em;
  width: 15em;
}

div.object {
  min-height: 1em;
  &>div.item:first-child {
    padding-top: 0px;
    border-top: 0px;
    margin-top: 0px;
  }
  &>div.item {
    position: relative;
    min-height: 1em; /* blank strings */

    padding-top: 4px;
    border-top: 1px dotted $c_outline;
    margin-top: 4px;
    &>span.key {
      min-width: 4em;
      vertical-align: top;
    }
    &>* {
      display: inline-block;
    }
  }
  &>div.item:last-child {
  }
}
div.array {
  &>div.item {
    &>span.key {
      font-size: 0.8em;
      line-height: 1.3em; // just trying to get the number to match up vertically
      min-width: 1.5em;
      color: lighten(desaturate($c_attribute, 25%), 25%);
    }
  }
}
div.hideKeys {
  &>div.item {
    &>span.key {
      display: none;
    }
  }
}
span.string {
  white-space: pre;
}

div.editor {
  min-height: 1em;
  min-width: 15em;
}

button {
  margin-top: .4em;
}

/* EDITOR */
/* Loosely based on the Midnight Textmate theme */

.cm-s-sembly {
  /*background: #0a001f;*/
  /*color: #f8f8f8;*/
  font-family: $font, monospace;
  border-radius: .3em;
  border: 1px solid $c_outline;
  margin: .3em;
  div.CodeMirror-selected {
    background: #B0B0B0 !important; /* standard chrome colors */
  }
  &.CodeMirror-focused div.CodeMirror-selected {
    background: #B4D5FF !important; /* standard chrome colors */
  }
  &.CodeMirror-scroll {
    margin: 0 !important;
    margin-top: 1px !important; /* i dunno, i saw the top border disappear on chrome */
    margin-bottom: 1px !important; /* and then i saw the bottom disappear on chrome ubuntu */
  }
  .CodeMirror-gutter {
    /*background: #0a001f;*/
    background: transparent;
    border-right: 1px solid $c_outline;
  }
  .CodeMirror-gutter-text {
    color: $c_outline;
  }
  .CodeMirror-cursor {
    border-left: 1px solid black !important;
  }
}

/**
 * Link to the project's GitHub page:
 * https://github.com/pickhardt/coffeescript-codemirror-mode
 */
span.cm-coffee-delimiter {color: $c_outline;}
span.cm-coffee-special {color: #FB9500;} // ->, =>
span.cm-coffee-error {background-color: #660000; color: #FFFFFF;}
span.cm-coffee-keyword,
span.cm-coffee-operator {color: #770088;}
span.cm-coffee-number,
span.cm-coffee-literal {color: #002EE0;}
span.cm-coffee-constant {color: #44AAFF;}
span.cm-coffee-identifier {color: black;}
span.cm-coffee-thisprop {color: $c_attribute;}
span.cm-coffee-comment {color: #668ee2;}
span.cm-coffee-string,
span.cm-coffee-bytes,
span.cm-coffee-raw,
span.cm-coffee-unicode {color: #228811;}

// deprecated
span.comment      { color: #668ee2; }
span.atom         { color: #F59BF0; }
span.number       { color: #002EE0; }
span.attribute    { color: $c_attribute; }
span.keyword      { color: #ffd500; }
span.string       { color: black; }
span.meta         { color: #7678e2; }
span.tag          { color: #99b2ff; }
span.variable     { color: black; }
span.variable-2   { color: black; }
span.variable-3   { color: black; }
span.def          { color: black; }
span.error        { color: #e6312a; }
span.bracket      { color: $c_outline; }
span.builtin      { color: #ff9e59; }
span.special      { color: #00cccc; }
span.link         { color: #551A8B; }
span.punctuation  { color: $c_outline; }
span.operator     { color: #00cccc; }

